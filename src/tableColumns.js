export const columns = [
	{
		title: 'No. Kewajiban',
		dataIndex: 'noKewajiban',
		key: 'noKewajiban',
		sorter: (a, b) => a.noKewajiban - b.noKewajiban,
		sortDirections: ['descend', 'ascend'],
		width: 150,
		fixed: 'left',
	},
	{
		title: 'No. Polisi',
		dataIndex: 'noPolisi',
		key: 'noPolisi',
		sorter: (a, b) => a.noPolisi.localeCompare(b.noPolisi),
		sortDirections: ['descend', 'ascend'],
		width: 150,
		fixed: 'left',
	},
	{
		title: 'Pemilik',
		dataIndex: 'pemilik',
		key: 'pemilik',
		sorter: (a, b) => a.pemilik.length - b.pemilik.length,
		sortDirections: ['ascend', 'descend'],
		width: 150,
		fixed: 'left',
	},
	{
		title: 'Peserta',
		dataIndex: 'peserta',
		key: 'peserta',
		sorter: (a, b) => a.peserta.length - b.peserta.length,
		sortDirections: ['ascend', 'descend'],
		width: 150,
		fixed: 'left',
	},
	{
		title: 'Nomor VA',
		dataIndex: 'nomorVA',
		key: 'nomorVA',
		sorter: (a, b) => a.nomorVA - b.nomorVA,
		sortDirections: ['descend', 'ascend'],
		width: 150,
	},
	{
		title: 'Harga Terbentuk (Rp)',
		dataIndex: 'hargaTerbentuk',
		key: 'hargaTerbentuk',
		sorter: (a, b) => a.hargaTerbentuk - b.hargaTerbentuk,
		sortDirections: ['descend', 'ascend'],
		width: 150,
	},
	{
		title: 'Biaya Admin ex PPN (Rp)',
		dataIndex: 'biayaAdmin',
		key: 'biayaAdmin',
		sorter: (a, b) => a.biayaAdmin - b.biayaAdmin,
		sortDirections: ['descend', 'ascend'],
		width: 150,
	},
	{
		title: 'PPN (Rp)',
		dataIndex: 'ppn',
		key: 'ppn',
		sorter: (a, b) => a.ppn - b.ppn,
		sortDirections: ['descend', 'ascend'],
		width: 150,
	},
	{
		title: 'Total (Rp)',
		dataIndex: 'total',
		key: 'total',
		sorter: (a, b) => a.total - b.total,
		sortDirections: ['descend', 'ascend'],
		width: 150,
	},
	{
		title: 'Tanggal Lelang',
		dataIndex: 'tanggalLelang',
		key: 'tanggalLelang',
		sorter: (a, b) =>
			new Date(a.tanggalLelang).getTime() -
			new Date(b.tanggalLelang).getTime(),
		sortDirections: ['descend', 'ascend'],
		width: 150,
	},
	{
		title: 'Tanggal Jatuh Tempo',
		dataIndex: 'tanggalJatuhTempo',
		key: 'tanggalJatuhTempo',
		sorter: (a, b) =>
			new Date(a.tanggalJatuhTempo).getTime() -
			new Date(b.tanggalJatuhTempo).getTime(),
		sortDirections: ['descend', 'ascend'],
		width: 150,
	},
	{
		title: 'Tanggal Lunas',
		dataIndex: 'tanggalLunas',
		key: 'tanggalLunas',
		sorter: (a, b) =>
			new Date(a.tanggalLunas).getTime() -
			new Date(b.tanggalLunas).getTime(),
		sortDirections: ['descend', 'ascend'],
		width: 150,
	},
	{
		title: 'Status',
		dataIndex: 'status',
		key: 'status',
		sorter: (a, b) => a.status.length - b.status.length,
		sortDirections: ['ascend', 'descend'],
		width: 150,
	},
];
